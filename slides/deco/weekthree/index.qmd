---
title: "Understanding README-Driven Documentation"
description: "Use READMEs for documentation"
date: "2025-09-15"
date-format: long
author: Gregory M. Kapfhammer
author: DJ Battle
author: chezka Quinola
author: Jordi Tort
author: Brandon Thompson
execute:
  echo: true
format:
  revealjs:
    completion: true
    theme: default
    css: ../../css/styles.css
    history: false
    scrollable: true
    transition: slide
    highlight-style: github
    footer: "Prosegrammers"
---

<!--chezka-->
# Understanding README-Driven Documentation

---

## Why Documentation Matters
- Helps others understand and use your code or project
- Reduces confusion and support questions
- Improves collaboration within teams
- Serves as a reference for future work
- Builds trust and credibility for your project

---

## What a README Is
- A file (usually `README.md`) that introduces your project
- Explains purpose, setup, and usage instructions
- Often includes:
  - Installation steps
  - Examples or demos
  - Contribution guidelines
  - License information
- First impression for anyone visiting your project


<!--jordi-->
## README-Driven Development
- Plan through writing first  
- README guides the project  

---

<!--jordi-->
## What Goes in a README?
- What the project does  
- How to set it up  
- How to use it  
- Who made it  

---

<!--DJ-->
## Why It’s Helpful
- It forces you to write documation before coding 
- You can see what evryone is doing without having to explain the code
- Lays out the guidelines for each member of the team to follow easily

---

<!--DJ-->
## Common Mistakes
- Not keeping to code selection not up to date
-  Not over explainging how to complete each step
- Not explaining the role of each person on the teams job

---

<!--brandon-->
## Best Tips
- Keep new users in mind
  - Make sure your README is structured to be not only accessible but also understandable for new users
- Clearly outline your project
  - Make sure that your README explains the project that you're doing and also why you are doing it, as well as the problem it solves and what makes it stand out.
- Define key features
  - On top of outlining the project and why you're doing it make sure to include the project's key features

---

<!--brandon-->
## Wrap-Up
- README is your project’s front door  
- Clear docs = happy users  

---

## Q&A
